<!--
model ClimateReport.Models.ClimateApi
Model.apiResponse
Model.cities



Model.speed
-->
@model WeatherApp.Models.Coordinates


<style>

    #SatyaDiv {
        padding-left: 20px;
    }

        #SatyaDiv select, #SatyaDiv button {
            background-color: #4CAF50;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 50%;
        }

        #SatyaDiv #message table {
            width: 100%;
            border: solid 3px green;
            color: black;
            font-style: oblique;
            font-family: Georgia;
            font-weight: bold;
            background: white;
        }

            #SatyaDiv #message table th {
                text-align: left;
                color: white;
                font-style: oblique;
                background: green;
            }
</style>


<style>
    span.tempfont {
        font-size: 120%;
        color: black;
    }
</style>


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

</head>
<body>

    <!--I have to press it twice for some reason
    function getReverseGeocodingData(lat, lng) {
    var latlng = new google.maps.LatLng(lat, lng);
    // This is making the Geocode request
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode({ 'latLng': latlng }, function (results, status) {
    if (status !== google.maps.GeocoderStatus.OK) {
    alert(status);
    }
    // This is checking to see if the Geoeode Status is OK before proceeding
    if (status == google.maps.GeocoderStatus.OK) {
    console.log(results);
    var address = (results[0].formatted_address);
    }
    });
    }


    function showAddress(position) {
    x.innerHTML = "Latitude: " + position.coords.latitude +
    "<br>Longitude: " + position.coords.longitude;
    }

        -->
    @*Now I need to store the result in my model so I can access it in my api controller*@
    @*<script>
            type = "text/javascript" src = "https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=AIzaSyCY4XX-om0CBwXnmF0XbqM2M1kiUcOsZ3Q" >

            </script>


        <script>
                function getReverseGeocodingData(lat, lng) {
                    var latlng = new google.maps.LatLng(lat, lng);
                    // This is making the Geocode request
                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                        if (status !== google.maps.GeocoderStatus.OK) {
                            alert(status);
                        }
                        // This is checking to see if the Geoeode Status is OK before proceeding
                        if (status == google.maps.GeocoderStatus.OK) {
                            console.log(results);
                            var address = (results[0].formatted_address);
                        }
                    });
                }*@


    @*</script>*@


    <!--
    <div class="container">
        <div class="row">
             <a class="backToForecast" href="/forecast/53.2842,-9.0378/si12/en">← Go Back</a>

                <form id="searchForm">
                    <a class="currentLocationButton" style="">
                        <img width="16" height="16" src="/images/current-location.png" alt="Current Location Button">
                    </a>

                    <input type="text" value="">

                    <a class="searchButton">
                        <img width="16" height="16" src="/images/search.png" alt="Search Button">
                    </a>

                    <div id="savedLocations" style="display: none;">
                        <div class="inner"></div>
                    </div>
                </form>
            </div>
        </div>


    <!--
            <div class="container">
                <div class="row">
                    <div class="col-sm">
                        <span class="tempfont">Wind:</span>
                        <span class="val swap">
                            <span class="num swip">7</span>
                            <span class="unit swap">m/s</span>
                    </div>
                    <div class="col-sm">
                        <span class="tempfont">Humidity:</span>
                        <span class="val swap">
                            <span class="num swip">76</span><span class="unit swap">%</span>
                        </span>
                    </div>
                    <div class="col-sm">
                        <span class="tempfont">Pressure:</span>
                        <span class="val swap">
                            <span class="num swip">1008</span>
                            <span class="unit swap">hPa</span>
                    </div>
                </div>
            </div>

            <!--
                <div id="currentDetails">
                    <div class="wind">
                        <span class="tempfont">Wind:</span>
                        <span class="val swap">
                            <span class="num swip">7</span>
                            <span class="unit swap">m/s</span>

                            <span class="direction" title="E" style="display:inline-block;-ms-transform:rotate(93deg);-webkit-transform:rotate(93deg);transform:rotate(93deg);">↑</span>
                        </span>
                    </div>

                    <div class="humidity">
                        <span class="tempfont">Humidity:</span>
                        <span class="val swap">
                            <span class="num swip">76</span><span class="unit swap">%</span>
                        </span>
                    </div>
                </div>

            <div class="current_details_break"></div>


            <div class="pressure">
                <span class="tempfont">Pressure:</span>
                <span class="val swap">
                    <span class="num swip">1008</span>
                    <span class="unit swap">hPa</span>
                </span>
            </div>
                -->



    <br />

    <h2 style="background-color: white;color: black; text-align: center; font-style: oblique">Weather API </h2>


    @*<p>Click the button to get your coordinates.</p>

        <button onclick="getLocation()">Try It</button>

        <p id="demo"></p>


        <script>
            var x = document.getElementById("demo");

            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition, showError);
                } else {
                    x.innerHTML = "Geolocation is not supported by this browser.";
                }
            }

            function showPosition(position) {
                x.innerHTML = "Latitude: " + position.coords.latitude +
                    "<br>Longitude: " + position.coords.longitude;

            }

            function showError(error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        x.innerHTML = "User denied the request for Geolocation."
                        break;
                    case error.POSITION_UNAVAILABLE:
                        x.innerHTML = "Location information is unavailable."
                        break;
                    case error.TIMEOUT:
                        x.innerHTML = "The request to get user location timed out."
                        break;
                    case error.UNKNOWN_ERROR:
                        x.innerHTML = "An unknown error occurred."
                        break;
                }
            }


        </script>*@
    <!--
    <script>

        function success(pos) {
            var crd = pos.coords;

            console.log('Your current position is:');
            console.log(`Latitude : ${//crd.latitude}`);
            console.log(`Longitude: ${//crd.longitude}`);
        }


        navigator.geolocation.getCurrentPosition(success);

    </script>
        -->
    @*<script>

            function success(pos) {
                var crd = pos.coords;

                console.log('Your current position is:');
                console.log(`Latitude : ${crd.latitude}`);
                console.log(`Longitude: ${crd.longitude}`);


                var model = new Object();
                model.Latitude = crd.latitude;
                model.Longitude = crd.longitude;

                alert(model.Latitude);

                jQuery.ajax({
                    type: "POST",
                    url: "@Url.Action("Index")",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ co: model }),
                    success: function (data) {
                        alert(data);
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            }


            navigator.geolocation.getCurrentPosition(success);

        </script>*@

    <!--
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>

    <script>

        function submitForm() {

            navigator.geolocation.getCurrentPosition(success);


            var model = new Object();
            model.Latitude = 260;
            model.Longitude = 240;

            alert(model.Latitude);

            jQuery.ajax({
                type: "POST",
                url: "Url.Action("Coordinates")",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ co: model }),
                success: function (data) {
                    alert(data);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        }
    </script>

    <input type="button" value="Click" onclick="submitForm()" />
        -->
    <!--
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>

        <script>
            function submitForm() {

                var model = new Object();
                model.Latitude = 120;
                model.Longitude = 240;


                jQuery.ajax({
                    type: "POST",
                    url: "Url.Action("Coordinates")",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ co: model }),
                    success: function (data) {
                        alert(data);
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            }
        </script>

        <input type="button" value="Click" onclick="submitForm()" />
        -->



    @using (Html.BeginForm())
    {
        <input type="text" name="reportName" />
        <input type="submit" />
    }


    <fieldset>
        <legend style="font-family:Arial Black;color:black"></legend>
        <div id="SatyaDiv">
            <h4 style="color:black"></h4>

            <!-- Html.Partial("PartialView")-->
            <div id="message">@(new HtmlString(@ViewBag.a))</div>

            @*<div id="message"> @Html.Raw(ViewBag.a)</div>

                <p>@Html.Raw(ViewBag.a as string)</p>

                <p><strong>Tag: @TempData["Tag"]</strong></p>*@

            @* <div id="message">(new HtmlString(Model.apiResponse))</div>*@
            @*<div id="message">@(new HtmlString(Model.rawJSON))</div>*@

            @*            <p> @Html.DisplayFor(m => m.rawJSON)</p>;*@



        </div>
    </fieldset>



   @* @Html.Partial("_ViewPartial");*@




    <div class="container">
        <h2>Accordion Example</h2>
        <p><strong>Note:</strong> The <strong>data-parent</strong> attribute makes sure that all collapsible elements under the specified parent will be closed when one of the collapsible item is shown.</p>
        <div class="panel-group" id="accordion">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">Collapsible Group 1</a>
                    </h4>
                </div>
                <div id="collapse1" class="panel-collapse collapse in">
                    <div class="panel-body">
                        Hello
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Collapsible Group 2</a>
                    </h4>
                </div>
                <div id="collapse2" class="panel-collapse collapse">
                    <div class="panel-body">
                        To you all
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">Collapsible Group 3</a>
                    </h4>
                </div>
                <div id="collapse3" class="panel-collapse collapse">
                    <div class="panel-body">
                        All
                    </div>
                </div>
            </div>
        </div>
    </div>

</body>
</html>






@*@{
        ViewBag.Title = "Index";
    }*@

<footer>
    <p style="background-color: black; font-weight: bold; color:green; text-align: center; font-style: oblique">© @DateTime.Now.ToLocalTime()</p> Add Date Time calender
</footer>

